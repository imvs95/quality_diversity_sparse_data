Quality Diversity Algorithms for Calibrating a Supply Chain Simulation Model with Sparse Data
==========================================================================================================
This repository is used to calibrate the underlying structure and parameters of a stylized supply chain simulation model of counterfeit Personal Protective Equipment (PPE) using the quality diversity algorithm.
For this, we use the `pyribs <https://pyribs.org/>`_ library for the quality diversity algorithm, and `pydsol-core <https://github.com/averbraeck/pydsol-core>`_ and `pydsol-model <https://github.com/imvs95/pydsol-model>`_ for the discrete event simulation model. The calibration is done with sparse data, which is generated by degrading the ground truth data on noise, bias, and missing values.
We define the structure of a supply chain simulation model as a key value of a dictionary (sorted on graph density), which is a set of possible supply chain models. The integer is, thus, a decision variable of the calibration, next to other parameters in the simulation model.

To use this repository, we need a simulation model developed in `pydsol-core <https://github.com/averbraeck/pydsol-core>`_ and `pydsol-model <https://github.com/imvs95/pydsol-model>`_ . Additionally, we need a dictionary with various different simulation structures as input, as well as the ground truth data.
For this project, we use the repository `complex_stylized_supply_chain_model_generator <https://github.com/imvs95/complex_stylized_supply_chain_model_generator>`_ as simulation model.

This repository is also part of the Ph.D. thesis of `Isabelle M. van Schilt <https://www.tudelft.nl/staff/i.m.vanschilt/?cHash=74e749835b2a89c6c76b804683ffbbcf>`_, Delft University of Technology. The version of the code used in the Ph.D. thesis is available at doi: `10.4121/766f4e89-fa03-47c6-a9f2-fa41f241984b.v1 <https://doi.org/10.4121/766f4e89-fa03-47c6-a9f2-fa41f241984b.v1>`_.

Content
=====================================================
The following folders can be found in this repository:

* *exp_results_p4*: The results of the quality diversity calibration of the Ph.D. thesis. This includes the code for processing the results, and the visualizations. Results upon request.
* *feature_scoring*: The code for the feature scoring analysis, also part of the Ph.D. thesis.
* *profiles*: The folder with the Python files for the different profiles of calibrating the supply chain simulation model (i.e., running the quality diversity algorithm). Each profile has a file for running QD with MAP Elites, CMA-ES, and for the sparseness with CMA-ES. We also included script files for the High Performance Computer. The profiles are discussed in more depth in the Ph.D. thesis.
* *results*: The folder where the results of the calibration are stored (when not otherwise specified). It also includes some examples on how to process the results (e.g., making a GIF).
* *utils_sparse*: The folder with the code for the sparse data generation, and the Excel files with the sparse data.

The following files can be found in this repository:

* *cma_es_with_sol_constraints.py*: The CMA-ES algorithm with case-specific constraints on the solutions.
* *dec_var_qd_density_40000_cnhk_usa.pkl*: The dictionary with 40.0000 different supply chain structures, sorted on graph density. File upon request (Large File) or available at  doi: `10.4121/adf4373c-7a9a-4d9c-a1ff-0f893d8d0b06.v1 <https://doi.org/10.4121/adf4373c-7a9a-4d9c-a1ff-0f893d8d0b06.v1>`_.
* *run_sim_model_obj.py*: The script for running the simulation model within the quality diversity algorithm. This script is needed for multiprocessing. The behavior space is the number of vertices and the time in system.
* *run_sim_model_obj_complexbs.py*: The script for running the simulation model within the quality diversity algorithm. This script is needed for multiprocessing. The behavior space is the density of the graph network and the transport cost. This script is used in the Ph.D. thesis.
* *run_sim_model_obj_complexbs_params.py*: The script for running the simulation model within the quality diversity algorithm. This script is needed for multiprocessing. The behavior space is the detection probability of parcels and the transport cost.
* *simmodel_cma_es_complexbs.py*: The script for running the quality diversity algorithm CMA-ES with the simulation model, for the complex behaviour space (density and transport cost).
* *simmodel_cma_es_sparseness_complexbs.py*: The script for running the quality diversity algorithm CMA-ES with the simulation model with adding data sparseness, for the complex behaviour space (density and transport cost).
* *simmodel_map_elites_complexbs.py*: The script for running the quality diversity algorithm MAP-Elites with the simulation model, for the complex behaviour space (density and transport cost).
* *simmodel_map_elites_sparseness_complexbs.py*: The script for running the quality diversity algorithm MAP-Elites with the simulation model with adding data sparseness, for the complex behaviour space (density and transport cost).
* *utilities_simmodel.py*: The script with the helper functions (i.e., post-processing data and Manhattan distance) for the simulation model.


Installing Requirements
=====================================================
Use the `requirements.txt` file to install the required packages. To install the packages, use the following command::

    pip install -r requirements.txt


For the analysis of the results, we calculate the graph edit distance. For this, you need to install the following package::

    git clone https://github.com/Jacobe2169/GMatch4py.git
    cd GMatch4py
    (sudo) pip(3) install .

For the feature scoring analysis, you also need to install ema-workbench. Use the following command::

    pip install -U ema_workbench

